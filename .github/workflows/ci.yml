name: Lint, test and publish

on: [push, pull_request]

jobs:
  php-lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP Action
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          tools: composer:v1
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - run: |
          composer install --prefer-source --quiet --no-interaction
          composer test

  etc-lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Lint
        run: |
          yarn --dev
          yarn run lint

  docker_image:
    name: Docker image test and publishing
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Edit configuration
        run: |
          mv configs/secret.php.example configs/secret.php;
          sed -i 's~http://localhost~http://127.0.0.1~' development.yml
          sed -i -r 's~ghcr\.io\/femiwiki\/mediawiki:.+~ghcr\.io\/femiwiki\/mediawiki:docker-test~' development.yml

      - run: echo "::set-output name=version::$(date +%Y-%m-%dT%H-%M)-$(echo ${{ github.sha }} | cut -c1-8)"
        id: version

      # Build amd64 only for testing, do not push.
      - name: Build
        uses: docker/build-push-action@v2
        with:
          # This cache-from value is the default and just for documentation purpose.
          cache-from: type=registry,ref=ghcr.io/femiwiki/mediawiki:latest
          cache-to: |
            type=inline
            type=local,dest=/tmp/.buildx-cache
          platforms: linux/amd64
          load: true
          tags: |
            ghcr.io/femiwiki/mediawiki:latest
            ghcr.io/femiwiki/mediawiki:docker-test
            ghcr.io/femiwiki/mediawiki:${{ steps.version.outputs.version }}

      - name: Initialize docker swarm and start services
        run: |
          docker swarm init
          docker stack deploy -c development.yml mediawiki

      - name: Access 127.0.0.1 until success
        timeout-minutes: 3
        run: |
          echo 'Waiting for http...'
          until curl -sLfo /dev/null 127.0.0.1; do
            sleep 1; done
      - name: Test Parsoid API
        run: |
          echo 'Waiting for parsoid...'
          until [ -n "$(docker ps -qf 'name=^mediawiki_parsoid')" ]; do
            sleep 1; done
          ID="$(docker ps -qf 'name=^mediawiki_parsoid')"
          until [ "$(docker inspect "$ID" --format='{{json .State.Health.Status}}')" = \"healthy\" ]; do
            sleep 1; done
          URL="http://127.0.0.1/api.php?action=visualeditor&format=json&page=arbitrary_page&paction=parse&wikitext=arbitrary"
          [[ ! "$(curl -Ls "$URL")" = *\"error\"* ]]

      - name: backup of failure
        if: ${{ failure() }}
        run: |
          echo 'Failed to connect to 127.0.0.1';
          curl -sLo /dev/null localhost && echo "success" || echo "failure"
          URL="http://127.0.0.1/api.php?action=visualeditor&format=json&page=arbitrary_page&paction=parse&wikitext=arbitrary"
          curl -Ls "$URL" && echo "success" || echo "failure"
          docker ps;
          for s in $(docker service ls -q ); do docker service ps "$s"; done
          docker container ps;
          for s in $(docker service ls -q ); do docker service logs "$s"; done

      - name: Check if the container is still up
        run: test "$(docker service ps -qf 'desired-state=Running' -f 'desired-state=Ready' mediawiki_fastcgi)"
      - name: Try to access the mediawiki
        run: curl -sSLvo /dev/null 127.0.0.1 || docker service logs mediawiki_fastcgi

      - name: Login to GitHub Container Registry
        if: github.repository_owner == 'femiwiki' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          cache-from: |
            type=registry,ref=ghcr.io/femiwiki/mediawiki:latest
            type=local,src=/tmp/.buildx-cache
          cache-to: type=inline
          platforms: linux/amd64,linux/arm64
          push: ${{ github.repository_owner == 'femiwiki' && github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/femiwiki/mediawiki:latest
            ghcr.io/femiwiki/mediawiki:${{ steps.version.outputs.version }}
